<!--
=============================================================================

  build.xml (ant build script)

  JEP - Java Expression Parser
  http://www.singularsys.com/jep

  Setting up your system to compile JEP:
  
  - Required: Set the JAVACCHOME environment variable to the location of the
    library directory of JavaCC (e.g. C:\apps\javacc\bin\lib)
    If not set then the grammar files will not be recompiled
  
=============================================================================
-->

<project name="JEP" default="compile" basedir=".">
	
	<!-- Jep version numbers -->
	<property name="jep-ver" value="2.4.0"/>
	<property name="ext-ver" value="1.1.0"/>

	<!-- Java version -->
	<property name="java-ver" value="1.8"/>
	
	<!-- library locations -->
	<property environment="env"/>
	<property name="javacchome" value="${env.JAVACCHOME}"/>
	
	<!-- set global properties for this build -->
	<property name="src"		value="src"/>
	<property name="bin"		value="bin"/>
	<property name="build"		value="build"/>
	<property name="dist"		value="dist"/>
	<property name="doc"		value="doc"/>
	<property name="lib"		value="lib"/>
	<property name="disttemp"	value="disttemp"/>
	
	<property name="jep-jar"	value="jep-${jep-ver}.jar"/>
	<property name="ext-jar"	value="ext-${ext-ver}.jar"/>
	
	<property name="jep-com-bin" value="jep-${jep-ver}-commercial-bin"/>
	<property name="jep-com-src" value="jep-${jep-ver}-commercial-src"/>
	<property name="jep-ext-com-bin" value="jep-${jep-ver}-ext-${ext-ver}-commercial-bin"/>
	<property name="jep-ext-com-src" value="jep-${jep-ver}-ext-${ext-ver}-commercial-src"/>
	<property name="jep-ext-gpl"	  value="jep-${jep-ver}-ext-${ext-ver}-gpl"/>
	
	<property name="classpath"     value="${lib}/junit.jar;${lib}/Jama-1.0.2.jar"/>

	<!-- <property name="website" value="website"/> -->

	<taskdef name="jjtree"
	classname="org.apache.tools.ant.taskdefs.optional.javacc.JJTree" />

	<taskdef name="javacc"
	classname="org.apache.tools.ant.taskdefs.optional.javacc.JavaCC" />

<!--======================================================================-->
<!-- INIT -->
	<target name="init" depends="print.javacc.not.present" >
		<!-- Create the time stamp -->
		<tstamp/>
		<!-- Echo environment variables -->
		<echo message="JAVACCHOME = ${javacchome}"/>
	</target>

	<target name="print.javacc.not.present" unless="${javacchome}">
			<echo message="JavaCC 2 or 3 is not present. Parser.jjt will not be processed!"/>
	</target>

<!--======================================================================-->
<!-- JJTREE -->
	<target name="jjtree" depends="init" if="env.JAVACCHOME">
		<echo message="javacc.present is true"/>
		<jjtree
			target="${src}/org/nfunk/jep/Parser.jjt"
			outputdirectory="${src}/org/nfunk/jep/"
			javacchome="${javacchome}"
		/>
	</target>

<!--======================================================================-->
<!-- JAVACC -->
	<target name="javacc" depends="jjtree" if="env.JAVACCHOME">
		<echo message="javacc.present is true"/>
		<javacc
			target="${src}/org/nfunk/jep/Parser.jj"
			outputdirectory="${src}/org/nfunk/jep/"
			javacchome="${javacchome}"
		/>
	</target>

<!--======================================================================-->
<!-- JAVACCDOC -->
	<target name="jjdoc" depends="javacc">
		<mkdir dir="${doc}/grammar"/>
		<jjdoc
			target="${src}/org/nfunk/jep/Parser.jj"
			outputfile="${doc}/grammar/grammar.html"
			javacchome="${javacchome}"
		/>
		<jjdoc
			target="${src}/org/nfunk/jep/Parser.jj"
			outputfile="${doc}/grammar/grammar.txt"
			text="true"
			javacchome="${javacchome}"
		/>
	</target>

      
<!--======================================================================-->
<!-- COMPILE -->
	
	<!-- Compiles with or without compatibility ensurance-->
	<target name="compile" depends="javacc" >
		<echo message="Compiling without ensuring compatibility"/>
		<!-- Create the build directory -->
		<mkdir dir="${build}"/>

		<!-- Compile the java code from ${src} into ${build} -->
		<javac srcdir="${src}"
		       destdir="${build}"
		       classpath="${classpath}"
			   deprecation="on"
		       source="${java-ver}"
			   target="${java-ver}" />
	</target>
	
<!--======================================================================-->
<!-- JAVADOC -->
	<target name="javadoc" depends="init">
		<delete dir="doc/javadoc"/>
		<mkdir dir="doc/javadoc"/>
		<javadoc packagenames="org.nfunk.jep.*,org.lsmp.*"
				classpath="${classpath}"
				sourcepath="src"
				destdir="doc/javadoc"
				windowtitle="JEP API"
				breakiterator="yes"
				source="1.4">
			<bottom><![CDATA[<A HREF="http://www.singularsys.com/jep" TARGET="_blank">http://www.singularsys.com/jep</A> Copyright &#169; 2006 Singular Systems]]></bottom>
		</javadoc>
	</target>


	
	
<!--======================================================================-->
<!-- JAR -->
	<target name="jar" depends="compile">
		<!-- Create the distribution directory -->
		<mkdir dir="${dist}"/>

		<!-- JEP jar without examples or testing classes-->
		<jar jarfile="${dist}/${jep-jar}"
		     basedir="${build}"
		     includes="org/nfunk/jep/**"/>
		
		<!-- Extensions jar without examples or testing classes -->
		<jar jarfile="${dist}/${ext-jar}"
		     basedir="${build}"
		     includes="org/lsmp/djep/**"/>
		
		<!-- JEP Examples jar for web site -->
		<!-- TODO: DJEP examples as well? -->
		<jar jarfile="${dist}/jep-${jep-ver}-withexamples.jar"
		     basedir="${build}"
		     includes="org/nfunk/jep/**,org/nfunk/jepexamples/**"/>
	</target>
<!--======================================================================-->
<!-- CLEAN -->
	<target name="clean">
		<!-- Delete the ${build} and ${dist} directory trees -->
		<delete dir="${build}"/>
		<delete dir="${dist}"/>
		<delete dir="${doc}/grammar"/>
	</target>


<!--======================================================================-->
<!-- FIXEOLS -->
<!-- Sets the EOL characters to Windows format for most files, and UNIX for
     bash scripts -->
	<target name="fixeols">
		<!-- Windows EOL for most files -->
		<fixcrlf
			srcdir="."
			eol="crlf"
			eof="asis"
			includes="**/*.java, **/*.html, **/*.bat, **/*.txt, **/*.xml"/>
		<!-- Unix EOL for shell files -->
		<fixcrlf
			srcdir="${bin}"
			eol="lf"
			eof="remove"
			includes="**/*.sh"/>
	</target>
	
<!--======================================================================-->
<!-- DIST -->
<!-- Creates five temporary directories to which files are copied.
     Then zip files are made from these directories -->
	<target name="dist" depends="fixeols,jar,javadoc">
		<!-- Create a temp dir for contents of packages-->
		<delete dir="${disttemp}" />
		<mkdir dir="${disttemp}/${jep-com-src}"/>
		<mkdir dir="${disttemp}/${jep-com-bin}"/>
		<mkdir dir="${disttemp}/${jep-ext-com-src}"/>
		<mkdir dir="${disttemp}/${jep-ext-com-bin}"/>
		<mkdir dir="${disttemp}/${jep-ext-gpl}"/>

		<!-- Copy src files -->
		<!-- define filterset -->
		<filterset id="sourcefilters">
			<filter token="header"    value=" JEP ${jep-ver}, Extensions ${ext-ver}"/>
			<filter token="date"      value="      ${TODAY}"/>
			<filter token="copyright" value="      (c) Copyright 2006, Nathan Funk and Richard Morris"/>
			<filter token="license"   value="      See LICENSE-*.txt for license information."/>
		</filterset>
		<!-- copy source files with filter to disttemp -->
		<copy todir="${disttemp}">
			<fileset dir="."
					includes="${src}/**"/>
			<filterset refid="sourcefilters"/>
		</copy>
		<!-- copy common files -->
		<copy todir="${disttemp}" enablemultiplemappings="true">
			<fileset dir="."
					includes="
					 ${doc}/**,
					 ${bin}/**,
					 ${lib}/**,
					 ${dist}/${jep-jar},
					 build.xml,
					 CHANGES.txt,
					 COPYRIGHT.txt,
					 README.html"/>
			<compositemapper>
				<globmapper from="*" to="${jep-com-src}/*"/>
				<globmapper from="*" to="${jep-com-bin}/*"/>
				<globmapper from="*" to="${jep-ext-com-src}/*"/>
				<globmapper from="*" to="${jep-ext-com-bin}/*"/>
				<globmapper from="*" to="${jep-ext-gpl}/*"/>
			</compositemapper>
		</copy>
		
		<!-- JEP Commercial Binary ================================== -->
		<copy todir="${disttemp}/${jep-com-bin}">
			<fileset dir="."
					includes="${build}/org/nfunk/**, LICENSE-com-binary.txt"/>
		</copy>
		<!-- JEP Commercial Source ================================== -->
		<copy todir="${disttemp}/${jep-com-src}">
		    <fileset dir="${disttemp}"
		    	includes="${src}/org/nfunk/**"/>
		</copy>
		<copy todir="${disttemp}/${jep-com-src}">
			<fileset dir="."
					includes="${build}/org/nfunk/**, LICENSE-com-source.txt"/>
		</copy>
		<!-- JEP+EXT Commercial Binary ================================== -->
		<copy todir="${disttemp}/${jep-ext-com-bin}">
			<fileset dir="."
					includes="${build}/**, ${dist}/${ext-jar}, LICENSE-com-binary.txt"/>
		</copy>
		<!-- JEP+EXT Commercial Source ================================== -->
		<copy todir="${disttemp}/${jep-ext-com-src}">
		    <fileset dir="${disttemp}"
		    	includes="${src}/**"/>
		</copy>
		<copy todir="${disttemp}/${jep-ext-com-src}">
			<fileset dir="."
					includes="${build}/**, ${dist}/${ext-jar}, LICENSE-com-source.txt"/>
		</copy>
		<!-- JEP+EXT GPL ================================================ -->
		<copy todir="${disttemp}/${jep-ext-gpl}">
		    <fileset dir="${disttemp}"
		    	includes="${src}/**"/>
		</copy>
		<copy todir="${disttemp}/${jep-ext-gpl}">
			<fileset dir="."
					includes="${build}/**, ${dist}/${ext-jar}, LICENSE-gpl.txt"/>
		</copy>

		<!-- zip files -->
		<zip zipfile="${dist}/${jep-com-bin}.zip"		basedir="${disttemp}/${jep-com-bin}" />
		<zip zipfile="${dist}/${jep-com-src}.zip"		basedir="${disttemp}/${jep-com-src}" />
		<zip zipfile="${dist}/${jep-ext-com-bin}.zip"	basedir="${disttemp}/${jep-ext-com-bin}" />
		<zip zipfile="${dist}/${jep-ext-com-src}.zip"	basedir="${disttemp}/${jep-ext-com-src}" />
		<zip zipfile="${dist}/${jep-ext-gpl}.zip"		basedir="${disttemp}/${jep-ext-gpl}" />

		<!-- clean up temporary files 
		<delete dir="${disttemp}" />-->
	</target>

</project>

